import requests
import sys
import datetime as dt
import argparse
import logging as log

log.basicConfig(format='%(asctime)s - %(message)s',
                datefmt='%d-%b-%y %H:%M:%S',
                level=log.DEBUG)


def run(options):
    description = f"""{options.description}\n""" \
    f"""{dt.datetime.now().strftime("%m/%d/%Y, %H:%M:%S")}(UTC) - {DEFAULT_TAG}"""
    request_data = {
        "id": options.mod,
        "game_id": options.game,
        "type": options.type,
        "category_id": options.category,
        "name": options.name,
        "version": options.version,
        "author": options.author,
        "summary": options.summary,
        "description": description,
        "language_id": 0,
        "tag_gore": 0,
        "tag_nudity": 0,
        "tag_skimpy": 0,
        "tag_sexualised": 0,
        "tag_profanity": 0,
        "suggested_category_id": None,
        "suggested_new_category": "",
        "classtags": "",
        "new_game_name": "",
        }
    headers = {'user-agent': options.user_agent, 'cookie': options.cookie}
    try:
        response = requests.post("https://www.nexusmods.com/Core/Libs/Common/Managers/Mods", params={"Save": ""}, data=request_data, headers=headers)
    except Exception as e:
        log.error(f"Requests Error: {e.__traceback__}")
        sys.exit (1)
    if response.status_code != 200:
        log.error("Response Status Code Error")
        sys.exit(1)
    response_json = response.json()
    if response_json['status']:
        log.info("Update Request Successful")
    else:
        log.error("Request Error")
        sys.exit(2)


if __name__ == "__main__":
    DEFAULT_TAG = """[i]THIS POST WAS AUTOGENERATED[/i] ðŸ¤–"""
    DEFAULT_USR_AGNT = r'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'
    parser = argparse.ArgumentParser()
    parser.add_argument("-c", "--cookie", type=str, required=True)
    parser.add_argument("-m", "--mod", type=int, required=True)
    parser.add_argument("-v", "--version", type=str, required=True)
    parser.add_argument("-n", "--name", type=str, required=True)
    parser.add_argument("-d", "--description", type=str, required=True)
    parser.add_argument("-s", "--summary", type=str, required=True)
    parser.add_argument("--user_agent", type=str, default=DEFAULT_USR_AGNT)
    parser.add_argument("--post_tag", type=str, default=DEFAULT_TAG)
    parser.add_argument("--author", type=str, default="SwordFisherL42")
    parser.add_argument("--game", type=int, default=2673)
    parser.add_argument("--type", type=int, default=1)
    parser.add_argument("--category", type=int, default=7)
    run(parser.parse_args())
